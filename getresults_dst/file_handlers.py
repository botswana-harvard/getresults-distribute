# -*- coding: utf-8 -*-
#
# Copyright (C) 2015 Erik van Widenfelt
# All rights reserved.
#
# This software is licensed as described in the file COPYING, which
# you should have received as part of this distribution.
#

import os
import re

from PyPDF2 import PdfFileReader
from PyPDF2.utils import PdfReadError

from .constants import PDF


class BaseFileHandler(object):

    def __init__(self, **kwargs):
        pass

    def process(self, *args):
        return True


class RegexPdfFileHandler(BaseFileHandler):
    """A file handler that extracts text from the PDF and looks for the
    file name (without extension) in the text.

    For example, file name is the specimen identifier or patient identifier.
    If so, these strings should appear in the PDF text. If not, might be that the
    PDF was incorrectly named.

    With tests, the PDS generated by report labs causes a TypeError in the
    :func:`pdf_to_text` method.

    """
    regex = None

    def __init__(self, **kwargs):
        self.text = None
        self.match_string = None
        super(RegexPdfFileHandler, self).__init__(**kwargs)

    def process(self, path, filename, mime_type):
        pattern = re.compile(self.regex)
        match = re.match(pattern, filename)
        if mime_type == PDF and match:
            self.match_string = match.group()
            if self.match_string in self.pdf_to_text(filename, path):
                return True
        return False

    def pdf_to_text(self, filename, path):
        self.text = ''
        path = os.path.join(path, filename)
        with open(path, "rb") as f:
            try:
                pdf_file_reader = PdfFileReader(f)
                for page in pdf_file_reader.pages:
                    self.text = page.extractText()
            except TypeError:
                # pyDPF2 is not fully PY3 compatible
                # for some PDFs get a PY2/PY3 error
                # in <string>' requires string as left operand, not int
                # in the filter.py module
                # just forget it and return the match string
                print('unable to read {}'.format(filename))
                return self.match_string
            except PdfReadError:
                pass
        return self.text
